---
title: "Yay Soccer!"
author: "Gretta Ineza, Sierra Rosado, Lindsay Ward "
date: "12/5/23"
format:
  html:
    theme: minty
    toc: true
---

```{r}
#| label: setup
#| include: false

# Set code chunk defaults 
# Consider adding `message = FALSE` option
knitr::opts_chunk$set(echo = FALSE) 
                      
# Set R environment options
options(knitr.kable.NA = '')

# Load packages
library(tidyverse)
```

# Intro

This is a blog about soccer. Yay!

### About Soccer
Insert Background here.

# Maps
#### Number of players by country for three leagues -- La Liga, Premier, and Bundesliga.
### La Liga
```{r}
#| fig.cap: 'La Liga players in each country'
#| out.width: 80%
#| fig.align: center

knitr::include_graphics("img/la_liga_map.png")
```

### Premier
```{r}
#| fig.cap: 'Premier players in each country'
#| out.width: 80%
#| fig.align: center

knitr::include_graphics("img/premier_map.png")
```
### Bundesliga
```{r}
#| fig.cap: 'Bundesliga players in each country'
#| out.width: 80%
#| fig.align: center

knitr::include_graphics("img/bundesliga_map.png")
```

# Team Scores
Here are networks displaying the goals scored. The arrows point to the away team.
```{r}
#| fig.cap: 'La Liga Scores'
#| out.width: 80%
#| fig.align: center
knitr::include_graphics("soccer_blog_files/figure-html/unnamed-chunk-13-1.png")
```

```{r}
#| fig.cap: 'Premier Scores'
#| out.width: 80%
#| fig.align: center
knitr::include_graphics("soccer_blog_files/figure-html/unnamed-chunk-19-1.png")
```

```{r}
#| fig.cap: 'Bundesliga Scores'
#| out.width: 80%
#| fig.align: center
knitr::include_graphics("soccer_blog_files/figure-html/unnamed-chunk-16-1.png")
```
## Now for one team:
```{r}
#| fig.cap: 'Scores by Team, La Liga'
#| out.width: 80%
#| fig.align: center
knitr::include_graphics("soccer_blog_files/figure-html/unnamed-chunk-21-1.png")


#""
```

```{r}
#| fig.cap: 'Premier Scores'
#| out.width: 80%
#| fig.align: center
knitr::include_graphics("soccer_blog_files/figure-html/unnamed-chunk-23-1.png")
```

```{r}
#| fig.cap: 'La Liga Scores'
#| out.width: 80%
#| fig.align: center
knitr::include_graphics("soccer_blog_files/figure-html/unnamed-chunk-25-1.png")
```
First, we have network connections for three big leagues in Europe: Bundesliga (Germany), La Liga (Spain), and the Premier League (England). We made network connections exploring how teams in these leagues have scored on each other. Teams typically play each other twice in the regular season, one game at each team’s field. Therefore, the arrows are colored by the home team’s goals. For example, the arrow going from Manchester City to Arsenal is the amount of goals Manchester City scored when the game was at the Etihad Stadium (Manchester City’s home field). The arrow going from Arsenal to Manchester City is the amount of goals Arsenal scored on Manchester City when the game was at the Emirates Stadium (Arsenal’s home field).

Since these network connections are a bit busy, we decided to create separate connections for the teams that ended in first in each league at the end of the 2021/22 season. These teams are Bayern Munich, Real Madrid, and Manchester City. The arrows represent the same events as mentioned above.

Looking at the network connections for the teams that ended in first, the colors of the arrows show that these teams scored lots of goals on their opponents when they played at home. When they were away, they did not concede many goals.

## Links 

You can include [links](https://www.datadreaming.org/post/r-markdown-theme-gallery/) using Markdown syntax as shown. 

You should include links to relevant sites as you write. You should additionally include a list of references as the end of your blog with full citations (and relevant links).


## Visualizations 

Visualizations, particularly interactive ones, will be well-received. That said, do not overuse visualizations. You may be better off with one complicated but well-crafted visualization as opposed to many quick-and-dirty plots. Any plots should be well-thought-out, properly labeled, informative, and visually appealing.

If you want to include dynamic visualizations or tables, you should explore your options from packages that are built from [**htmlwidgets**](https://www.htmlwidgets.org/showcase_leaflet.html). These **htmlwidgets**-based packages offer ways to build lighterweight, dynamic visualizations or tables that don't require an R server to run! A more complete list of packages is available on the linked website, but a short list includes:

* [**plotly**](https://plot.ly/r/): Interactive graphics with D3
* [**leaflet**](https://rstudio.github.io/leaflet/): Interactive maps with OpenStreetMap
* [**dygraphs**](http://rstudio.github.io/dygraphs): Interactive time series visualization
* [**visNetwork**](http://dataknowledge.github.io/visNetwork): Network graph visualization vis.js
* [**sparkline**](https://github.com/htmlwidgets/sparkline): Small inline charts
* [**threejs**](https://github.com/bwlewis/rthreejs): Interactive 3D graphics
    
You may embed a published Shiny app in your blog if useful, but be aware that there is a limited window size for embedded objects, which tends to makes the user experience of the app worse relative to a dedicated Shiny app page. Additionally, Shiny apps will go idle after a few minutes and have to be reloaded by the user, which may also affect the user experience. 

Any Shiny apps embedded in your blog should be accompanied by the link to the published Shiny app (I did this using a figure caption in the code chunk below, but you don't have to incorporate the link in this way).

```{r}
#| label: ds-salaries-app
#| out.width: "100%"

knitr::include_app("https://bebailey.shinyapps.io/data-science-salaries",
                   height = "500px")
```


## Tables

### **DT** package

The [**DT** package](https://rstudio.github.io/DT/) is great for making dynamic tables that can be displayed, searched, and filtered by the user without needing an R server or Shiny app!

Note: you should load any packages you use in the `setup` code chunk as usual. The `library()` functions are shown below just for demonstration.

```{r}
#| label: dt-example
#| message: false
#| echo: true

library(DT)
mtcars |>
  select(mpg, cyl, hp) |>
  datatable(colnames = c("MPG", "Number of cylinders", "Horsepower"),
            filter = 'top',
            options = list(pageLength = 10, autoWidth = TRUE))
```

### **kableExtra** package

You can also use [**kableExtra**](https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html) for customizing HTML tables.

```{r}
#| label: kable-example
#| echo: true
#| message: false

library(kableExtra)
summary(cars) |>
  kbl(col.names = c("Speed", "Distance"), row.names = FALSE) |>
  kable_styling(bootstrap_options = "striped", full_width = FALSE) |>
  row_spec(0, bold = TRUE) |>
  column_spec(1:2, width = "1.5in") 
```


## Images

Images and gifs can be displayed using code chunks:

```{r}
#| fig.cap: '"Safe Space" by artist Kenesha Sneed'
#| out.width: 80%
#| fig.align: center

knitr::include_graphics("img/Kenesha-Sneed_safe-space.jpeg")
```


```{r}
#| fig.cap: "This is a figure caption"
#| out.width: 50%
#| fig.align: center
knitr::include_graphics("https://media.giphy.com/media/H7ZrrA9V2pd3Tehdds/giphy.gif")
```

You may also use Markdown syntax for displaying images as shown below, but code chunks offer easier customization of the image size and alignment.

![This is another figure caption](https://media.giphy.com/media/8i5IvxP9ZLgmjXN1BF/giphy.gif)

Either way, the file path can be a local path within your project directory or a URL for an image hosted online. This syntax works for PNG, PDF, JPG, and even GIF formats.


## Equations

You might include equations if part of the purpose of your blog is to explain a statistical method. There are two ways to include equations:

* Inline: $b \sim N(0, \sigma^2_b)$
* Display-style (displayed on its own line): 
$$\frac{\sigma^2_b}{\sigma^2_b + \sigma^2_e}$$

For typesetting equations appropriately, check out the [AMS-LaTeX quick reference](https://github.com/manuelemacchia/math-latex/blob/master/amsmath.pdf) or take a look at the *Symbols in math mode* section of this  [cheat sheet](https://users.dickinson.edu/~richesod/latex/latexcheatsheet.pdf)  (or do some extra Googling---there are *many* resources).



# Formatting

## Tabbed subsections {.tabset}

Each subsection below the "Tabbed subsections" section heading will appear in a tab. See R Markdown Cookbook [Section 7.6: Put content in tabs](https://bookdown.org/yihui/rmarkdown-cookbook/html-tabs.html) for additional customization options. 

### Bulleted list

You can make a bulleted list like this:

* item 1
* item 2
* item 3


### Numbered list


You can make a numbered list like this

1. First thing I want to say
2. Second thing I want to say
3. Third thing I want to say



## Column formatting

<!-- Begin columns environment -->
:::::: {style="display: flex; font-size: large;"}

<!-- Create a column -->
::: {}
### Content Column 1

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vel ipsum eu sem facilisis porttitor. Integer eu tristique lectus. Vestibulum nisi risus, porta sit amet cursus nec, auctor ac tellus. Integer egestas viverra rhoncus. Fusce id sem non ante vestibulum posuere ac sed lorem. Proin id felis a mi pellentesque viverra in at nulla. Duis augue nulla, aliquet ac ligula a, sagittis varius lorem.



:::

<!-- Create another column (this one is just adding horizontal space to separate content) -->
::: {}
<div class="horizontalgap" style="width:60px"></div>
:::

<!-- Create another column -->
::: {}

### Content Column 2

Aliquam non ante et erat luctus hendrerit eu ac justo. Fusce lacinia pulvinar neque non laoreet. Fusce vitae mauris pharetra, scelerisque purus eget, pharetra nisl. Aenean volutpat elementum tortor vitae rhoncus. Phasellus nec tellus euismod neque congue imperdiet tincidunt in mauris. Morbi eu lorem molestie, hendrerit lorem nec, semper massa. Sed vulputate hendrerit ex, eget cursus purus. Pellentesque consequat erat leo, eleifend porttitor lacus porta at. Vivamus faucibus quam ipsum, id condimentum ligula malesuada ultrices. Nullam luctus leo elit, vitae rutrum nibh venenatis eget. Nam at sodales purus. Proin nulla tellus, lacinia eget pretium sed, vehicula aliquet neque. Morbi vel eros elementum, suscipit elit eu, consequat libero. Nulla nec aliquet neque. Nunc bibendum sapien lectus, sed elementum nisi rutrum non. Ut vulputate at lacus eget maximus.

```{r}
#| out.width: 80%
#| fig.align: right
mtcars |>
  ggplot(aes(x = wt, y = mpg)) +
  geom_point()
```

:::
::::::
<!-- End columns environment with matching length indicator-->




# Customizing your blog design


As a *final* detail **only** if you have time, you can explore options for customizing the style of your blog. By default, we are using the `cosmo` theme from Bootswatch themes (see Line 7 of this file if you want to switch out themes). 


## Theme

There are 25 Bootswatch themes included with Quarto. You can change the theme easily by specifying one of these themes on Line 7: 

- default  
- cerulean  
- cosmo  
- cyborg  
- darkly  
- flatly  
- journal  
- litera  
- lumen  
- lux  
- materia  
- minty  
- morph  
- pulse  
- quartz  
- sandstone  
- simplex  
- sketchy  
- slate  
- solar  
- spacelab  
- superhero  
- united  
- vapor  
- yeti  
- zephyr

There are, I'm sure, many more similar packages with built in themes, or you can look into how to include a CSS code chunk to customize aspects of a theme.  

## Synax highlighting

You can also change the code chunk syntax highlighting option (Line 7, `highlight`): 

* `"default"`
* `"tango"`
* `"pygments"`
* `"kate"`
* `"monochrome"`
* `"espresso"`
* `"zenburn"`
* `"haddock"`
* `"textmate"` 
* `NULL` for no syntax highlighting (not recommended)

## Font size, type, and other customization

Further customization requires adding a CSS style file or code chunk or incorporating other development options. Further customization should be your lowest and final priority for the project. Ensure your content is fully prepared first.


# References

All data sources, any key R packages, and any other sources used in developing your blog should be cited in full in a list of references at the end of your blog. Your blog post should also link to these sources as they are discussed. You may choose any reference style as long as sources are fully cited (try to be consistent!).

Typically, references in R Markdown (and LaTeX) files are [incorporated with a BibTeX database](https://bookdown.org/yihui/rmarkdown-cookbook/bibliography.html) (a .bib file). You can try this approach or manually include either a numbered or alphabetized list. 

Columbia University has compiled some guidance on [how to cite data](https://guides.library.columbia.edu/datacitation). Some data sources will give you the citation information to copy and paste. Use the provided citations or citation styles in those cases.

You can list R package citations with the code `citation("packageName")` in the console and then copy (and reformat as needed) the relevant text, e.g.,
```{r}
citation("DT")
```

The following citations are based on the American Statistical Association citation style (not all of these references are used in this document).:


<!-- Textbook -->
Baumer, B. S., Kaplan, D. T., and Horton, N. J. (2021), *Modern Data Science with R* (2nd ed.), Boca Raton, FL: CRC Press.

<!-- Journal article -->
Broman, K. W. and Woo, K. H. (2018), "Data Organization in Spreadsheets," *The American Statistician*, 72:1, 2-10, doi: [10.1080/00031305.2017.1375989](https://doi.org/10.1080/00031305.2017.1375989)

<!-- Website -->
Columbia University Libraries (n.d.), "Data Citation," available at <https://guides.library.columbia.edu/datacitation>.

<!-- Journal article -->
McNamara, A. and Horton N. J. (2018) "Wrangling Categorical Data in R," *The American Statistician*, 72:1, 97-104, doi: [10.1080/00031305.2017.1356375](https://doi.org/10.1080/00031305.2017.1356375).

<!-- Dataset -->
Shah, Syed A. A. (October 2022), "Starbucks Drinks" (Version 1), *Kaggle*, available at <https://www.kaggle.com/datasets/syedasimalishah/starbucks-drinks>.

<!-- R package -->
Xie Y, Cheng J, Tan X (2022). "DT: A Wrapper of the JavaScript Library 'DataTables'," R package version 0.24, available at <https://CRAN.R-project.org/package=DT>.
  


 


